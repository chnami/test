스프링에서는 BeanFactory와 이를 상속한 ApplicationContext 두 가지 유형의 컨테이너를 제공합니다.
1. BeanFactory는 스프링 설정 파일에 등록된 <bean>객체를 생성하고 관리하는 가장 기본적인 컨테이너기능만 제공합니다.
	컨테이너가 구동될 때 <bean>객체를 생성하는 것이 아니라 클라이언트의 요청(Lookup)에 의해서만 <bean>객체가 생성되는 지연로딩(Lazy Loding)방식을 사용합니다.

2. ApplicationContext는 BeanFactory가 제공하는 <bean>객체 관리 기능 외에도 트랜잭션 관리나 메시지 기반의 다국어 처리 등 다양한 기능을 제공합니다.
	또한 컨테이너가 구동되는 시점에 <bean> 등록된 클래스들을 객체 생성하는 즉시 로딩(pre-loading)방식으로 동작합니다.
	그리고 웹 애플리케이션 개발도 지원하므로 대부분 스프링 프로젝트는 ApplicationContext 유형의 컨테이너를 이용합니다.

구현 클래스
	1. GenericXmlApplicationContext : 파일 시스템이나 클래스 경로에 있는 XML 설정 파일을 로딩하여 구동하는 컨테이너 입니다.
	2. XmlWebApplicationContext : 웹 기반 스프링 애플리케이션을 개발할 떄 사용하는 컨테이너입니다. 우리가 직접 생성하지 않는 컨테이너입니다.